---
- name: Reciclagem Pool - Maior ofensor Memory
  hosts: windows
  gather_facts: yes
  vars:
    iis: true
    eventlog_log: MyCustomLog
    eventlog_source: MyCustomLog
    eventlog_msg: "Ansible Action - Restart IIS Web Server - Numero do Alerta {{ num_alerta }} - Ansible Job {{ awx_job_id }}"
    num_alerta: "00000"
    memory_limit: 5
  tasks:

    - name: Chamada de automacao especifica para coleta de informacoes de memoria
      ansible.builtin.include_tasks:
        file: ../win-troubleshooting/task-win-mem.yml ###

    - name: Definir dados da primeira coleta de utilizacao de memoria
      set_fact:
        primeira_memory_usage_percent: "{{ (system_info.stdout | from_json).memory_usage_percent }}"

    - name: Listar os 10 processos que mais consomem memória no sistema - Geral
      win_shell: |
        Get-Process | Sort-Object WS -Descending | Select-Object -First 10 | Format-Table Name, WS -AutoSize | Out-String
      register: top_10_memory_processes

    - name: Exibir os 10 processos que mais consomem memória no sistema - Geral
      debug:
        var: top_10_memory_processes.stdout_lines

    - name: Get process ID
      win_shell: |
        $id = (get-process  | where { $_.Name -eq 'w3wp'} | Sort-Object  -Property WS | Select-Object -Last 1).id
        echo $id
      register: output_id_w3wp
      ignore_errors: true

    - name: Get process w3wp
      win_command: c:\windows\system32\inetsrv\appcmd.exe list wp {{ item }}
      with_items: 
          - "{{ output_id_w3wp.stdout_lines }}"
      ignore_errors: true

    - name: Get user Sessions
      win_shell: |
        quser 
      register: quser_out
      ignore_errors: true

    # Esta tarefa encerra sessões de usuário desconectadas no Windows Server 2012 e Windows Server 2016/2019
    - name: Kill Disconnect Sessions RDP 2012 # identificar sessões de usuário desconectadas (indicadas pelo "Disc") e, em seguida, encerrá-las usando o comando logoff
      win_shell: |
        quser | Select-Object -Skip 1 | select-string "Disc"| ForEach-Object {
            $id = ($_ -split ' +')[-6]
            logoff $id
        }
      ignore_errors: true

    - name: Kill Disconnect Sessions RDP 2016/2019 # identificar sessões de usuário desconectadas (indicadas pelo "Disc") e, em seguida, encerrá-las usando o comando logoff
      win_shell: |
        quser | Select-Object -Skip 1 | select-string "Disc"| ForEach-Object {
            $id = ($_ -split ' +')[-5]
            logoff $id
        }
      ignore_errors: true

# realizar chamada de automacao para nova visão de consumo de memoria - apos kill das sessoes RDP
    - name: Chamada de automacao especifica para coleta de informacoes de memoria
      ansible.builtin.include_tasks:
        file: ../win-troubleshooting/task-win-mem.yml

    - name: Definir dados da segunda coleta de utilizacao de memoria
      set_fact:
        segunda_memory_usage_percent: "{{ (system_info.stdout | from_json).memory_usage_percent }}"

    - name: Kill process - top memory # Esta tarefa encerra o processo 'w3wp' com a maior utilização de memória.
      win_shell: |
        $id = (get-process  | where { $_.Name -eq 'w3wp'} | Sort-Object  -Property WS | Select-Object -Last 1).id
        Kill $id -Force
      when: memory_usage_percent | float > memory_limit | float
      register: kill_process_top_memory

    - name: debug
      debug:
        var: kill_process_top_memory

    - name: Chamada de automacao especifica para coleta de informacoes de memoria # essa automacacao sera executada se a memoria em uso estiver acima de 70%
      ansible.builtin.include_tasks:
        file: ../win-troubleshooting/task-win-mem.yml
      when: not kill_process_top_memory.skipped #false

    - name: Definir dados da terceira coleta de utilizacao de memoria # essa automacacao sera executada se a memoria em uso estiver acima de 70%
      set_fact:
        terceira_memory_usage_percent: "{{ (system_info.stdout | from_json).memory_usage_percent }}"
        when: not kill_process_top_memory.skipped #false

    - name: Definir informações em uma variavel 
      set_fact:
        kill_processo_w3wp: "{{ kill_process_top_memory.changed }}"
        status_automacao: |-
          ################################################
          #              STATUS DA ATIVIDADE             #
          ################################################
          Servidor Analisado/limits: {{ ansible_limit }}
          Hostname servidor: {{ ansible_hostname }}
          Versao do S.O: {{ ansible_os_name }}
          Vendor: {{ ansible_system_vendor }}
          Status Consumo memoria em uso ANTES da acao ANSIBLE: {{ primeira_memory_usage_percent }}%
          Status Consumo memoria em uso Apos kill dos processo RDP: {{ segunda_memory_usage_percent }}%
          Necessario kill dos processo de w3wp: {{ kill_process_top_memory.changed }}
          Numero do Alerta: {{ num_alerta }}
          Jod da Automação no Automation Controller: {{ awx_job_id }}
          ################################################   
      when: kill_process_top_memory.skipped

    - name: Definir informações em uma variavel 
      set_fact:
        kill_processo_w3wp: "{{ kill_process_top_memory.changed }}"
        status_automacao: |-
          ################################################
          #              STATUS DA ATIVIDADE             #
          ################################################
          Servidor Analisado/limits: {{ ansible_limit }}
          Hostname servidor: {{ ansible_hostname }}
          Versao do S.O: {{ ansible_os_name }}
          Vendor: {{ ansible_system_vendor }}
          Status Consumo memoria em uso ANTES da acao ANSIBLE: {{ primeira_memory_usage_percent }}%
          Status Consumo memoria em uso Apos kill dos processo RDP: {{ segunda_memory_usage_percent }}%
          Necessario kill dos processo de w3wp: {{ kill_process_top_memory.changed }}
          Status Consumo memoria em uso Apos kill dos processo w3wp: {{ terceira_memory_usage_percent }}%
          Numero do Alerta: {{ num_alerta }}
          Jod da Automação no Automation Controller: {{ awx_job_id }}
          ################################################   
      when: not kill_process_top_memory.skipped #true

    - name: Exibir banner
      debug:
        msg: "{{ status_automacao.split('\n') }}" 

