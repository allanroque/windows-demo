---
- name: Coletar informacoes de app pools
  hosts: windows
  vars:
    apppool_name: MyAppPool1
  tasks:
    - name: Obter lista de pools de aplicativos
      win_shell: Get-IISAppPool | Select-Object Name, Status
      register: result

    - name: Exibir lista de pools de aplicativos
      debug:
        var: result.stdout_lines

    - name: Obter status detalhado do pool de aplicativos
      win_shell: |
        Get-IISAppPool -Name {{ apppool_name }}
      register: status_result
      #        Get-IISAppPool -Name {{ apppool_name }} | Select-Object Name, Status, Applications, ProcessModel, Recycling, Failure

    - name: Exibir status detalhado do pool de aplicativos
      debug:
        var: status_result.stdout_lines

    - name: Obter status do pool de aplicativos
      win_shell: |
        $pool = Get-IISAppPool -Name {{ apppool_name }}
        $status = Get-WebAppPoolState -Name {{ apppool_name }}
      register: status_result
      #$pool | Select-Object Name, @{Name='Status'; Expression={$status.Value}}, Applications, ProcessModel, Recycling, Failure

    - name: Obter status do pool de aplicativos
      win_shell: |
        $status = (Get-WebAppPoolState -Name MyAppPool1).Value
        Set-Variable -Name PoolStatus -Value $status -Scope Global
        $status
      register: status_result

    - name: Definir variável com status do pool de aplicativos
      set_fact:
        pool_status: "{{ status_result.stdout_lines[2] }}"
        
    - name: Exibir status do pool de aplicativos
      debug:
        var: status_result.stdout_lines

    # Supondo que os logs estejam no caminho padrão
    - name: Obter logs do pool de aplicativos
      win_shell: Get-Content C:\inetpub\logs\LogFiles\W3SVC1\u_ex*.log -Tail 10
      register: log_result

    - name: Exibir logs do pool de aplicativos
      debug:
        var: log_result.stdout_lines